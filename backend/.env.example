# File: backend/.env.example
# Example environment variables for the Soil Game Backend
# Copy this file to .env and fill in your actual values.
# DO NOT commit the .env file with sensitive credentials to version control.

# --- Application Settings ---
# FastAPI/Uvicorn settings (though typically configured via CLI or Docker CMD)
# HOST=0.0.0.0
# PORT=8000
# WORKERS=1 # Number of Uvicorn workers, adjust based on CPU for production

# General application settings
PROJECT_NAME="Soil Game"
API_V1_STR="/api/v1"
ENVIRONMENT="development" # or "production", "testing"

# --- Security ---
# Secret key for signing JWTs. Generate a strong random key.
# openssl rand -hex 32
SECRET_KEY=your_super_secret_random_key_here
ALGORITHM=HS256 # Algorithm for JWT, e.g., HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440 # 24 hours, adjust as needed

# CORS Origins (comma-separated list of allowed origins)
# For development, you might use "http://localhost:4200,http://127.0.0.1:4200"
# For production, set this to your frontend's domain: "https://your-frontend-domain.com"
BACKEND_CORS_ORIGINS="http://localhost:4200,http://127.0.0.1:4200,https://soil.app" # Add your production frontend URL

# --- Firebase/Google Cloud ---
# Your Google Cloud Project ID
GCP_PROJECT_ID="your-gcp-project-id"

# Path to your Firebase Admin SDK service account JSON file.
# This path is relative to where the application is run.
# For Docker, this path would be inside the container (e.g., /app/serviceAccountKey.json)
# For local development, it can be a path on your local machine.
# IMPORTANT: For production on Cloud Run, it's better to use Workload Identity
# and not rely on a service account key file directly.
# If using Workload Identity, this variable might not be strictly needed by the app
# if the Cloud Run service account has the necessary permissions.
GOOGLE_APPLICATION_CREDENTIALS="path/to/your/serviceAccountKey.json"

# Firestore settings (if not implicitly derived from GOOGLE_APPLICATION_CREDENTIALS)
# FIRESTORE_PROJECT_ID="your-gcp-project-id"
# FIRESTORE_DATABASE_ID="(default)" # Or your specific Firestore database ID

# Firebase Authentication - often configuration is handled by the Admin SDK initialization
# FIREBASE_API_KEY="your-firebase-project-api-key" # Usually for client-side, but can be useful for some admin tasks
# FIREBASE_AUTH_DOMAIN="your-project-id.firebaseapp.com"
# FIREBASE_DATABASE_URL="https://your-project-id.firebaseio.com" # Or your-project-id-default-rtdb.firebaseio.com
# FIREBASE_STORAGE_BUCKET="your-project-id.appspot.com"
# FIREBASE_MESSAGING_SENDER_ID="your-sender-id"
# FIREBASE_APP_ID="your-firebase-app-id"


# --- Email Settings (for registration confirmation, password reset, etc.) ---
SMTP_TLS=True
SMTP_PORT=587
SMTP_HOST="smtp.example.com" # Your SMTP server
SMTP_USER="your_smtp_username"
SMTP_PASSWORD="your_smtp_password"
EMAILS_FROM_EMAIL="noreply@soil.app" # The "From" email address
EMAILS_FROM_NAME="Soil Game"

# --- Game Settings ---
DEFAULT_GAME_ROUNDS=15 # Increased from the original
MAX_PLAYERS_PER_GAME=8
MIN_PLAYERS_PER_GAME=1 # Set to 1 if AI players can fill or for single-player vs AI

# If using Cloud Spanner or Cloud SQL in addition to Firestore
# POSTGRES_SERVER="localhost"
# POSTGRES_USER="your_db_user"
# POSTGRES_PASSWORD="your_db_password"
# POSTGRES_DB="soil_game_db"
# DATABASE_URL="postgresql+asyncpg://your_db_user:your_db_password@localhost/soil_game_db" # Example for SQLAlchemy