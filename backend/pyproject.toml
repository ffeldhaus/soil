# File: backend/pyproject.toml
[project]
name = "soil-game-backend"
version = "0.1.0"
description = "Backend for the Soil educational game, rewritten in Python."
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md" 
package-mode = false # <--- ADDED THIS LINE: Disables packaging features for this project
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.1",
    "pydantic[email]>=2.7.1",
    "pydantic-settings>=2.3.1",
    "firebase-admin>=6.5.0",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.9",
    "aiosmtplib>=3.0.1",
    # Optional: If choosing Cloud SQL (PostgreSQL) instead of/alongside Firestore
    # "asyncpg>=0.29.0",
    # "sqlalchemy[asyncio]>=2.0.30",
    # "alembic>=1.13.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.7",
    "httpx>=0.27.0", # For testing FastAPI endpoints
    "black>=24.4.2",
    "ruff>=0.4.4",
    "mypy>=1.10.0",
    "pre-commit>=3.7.1",
    # For generating .env files from .env.example
    "python-dotenv[cli]>=1.0.1",
    "pytest-cov>=4.1.0",
]

[build-system]
requires = ["uv>=0.1.17"]
build-backend = "uv"
backend-path = "."

[tool.black]
line-length = 88
target-version = ['py313']

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "RUF",# Ruff-specific rules
]
ignore = [
    "E501", # Line too long, handled by black
]
fix = true
target-version = "py313"

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true # Start with true, can be refined
disallow_untyped_defs = true
check_untyped_defs = true
# Enable strict mode options selectively as the project matures
# strict = true

[[tool.mypy.overrides]]
module = [
    "firebase_admin.*", 
    "passlib.*",
    "jose.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["."]
# Add test file patterns if needed, e.g., testpaths = ["tests"]